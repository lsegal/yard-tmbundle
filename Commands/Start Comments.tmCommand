<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby

file_contents = STDIN.readlines

# The next line, if is a method description, deconstruct it and generate all the helpers
# for it.
next_line = file_contents[ENV["TM_LINE_NUMBER"].to_i]

if next_line =~ /^\s*def\s*([^\s\(]+)\s*\(?\s*((?:\w+\s*[^,\)]*\s*,?\s*)*)\s*\)?\s*$/
  
  puts "#"
  
  parameters = Regexp.last_match(2)

  # Get the count of parameters found so that I can create better indexes of methods 

  parameters.scan(/(?:(\w+)\s*(?:[^,\)]*)\s*)/).each_with_index do |param,index|
    puts "# @param [${#{1 + (index * 2)}:Types}] #{param} ${#{2  + (index * 2)}:Description}"  
  end

end

print "#"</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>document</string>
	<key>name</key>
	<string>Start Comments</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>source.ruby</string>
	<key>tabTrigger</key>
	<string>##</string>
	<key>uuid</key>
	<string>11314DEC-DEC2-4F8C-BC58-C5484D9651B9</string>
</dict>
</plist>
